// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAPI.Data;

#nullable disable

namespace StudentAPI.Data.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    partial class StudentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentAPI.Data.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaughtBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = "MATH101",
                            CourseName = "Mathematics",
                            TaughtBy = "Professor Smith"
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = "HIST101",
                            CourseName = "History",
                            TaughtBy = "Professor Johnson"
                        },
                        new
                        {
                            Id = 3,
                            CourseCode = "BIO101",
                            CourseName = "Biology",
                            TaughtBy = "Professor Wilson"
                        },
                        new
                        {
                            Id = 4,
                            CourseCode = "CHEM101",
                            CourseName = "Chemistry",
                            TaughtBy = "Professor Brown"
                        },
                        new
                        {
                            Id = 5,
                            CourseCode = "CSCI101",
                            CourseName = "Computer Science",
                            TaughtBy = "Professor Davis"
                        },
                        new
                        {
                            Id = 6,
                            CourseCode = "ENGL101",
                            CourseName = "English Literature",
                            TaughtBy = "Professor White"
                        },
                        new
                        {
                            Id = 7,
                            CourseCode = "PHYS101",
                            CourseName = "Physics",
                            TaughtBy = "Professor Anderson"
                        },
                        new
                        {
                            Id = 8,
                            CourseCode = "PSYCH101",
                            CourseName = "Psychology",
                            TaughtBy = "Professor Martinez"
                        },
                        new
                        {
                            Id = 9,
                            CourseCode = "ECON101",
                            CourseName = "Economics",
                            TaughtBy = "Professor Robinson"
                        },
                        new
                        {
                            Id = 10,
                            CourseCode = "ARTH101",
                            CourseName = "Art History",
                            TaughtBy = "Professor Garcia"
                        });
                });

            modelBuilder.Entity("StudentAPI.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdmittedDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatricNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmittedDay = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 2,
                            DateOfBirth = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Computer Science",
                            FirstName = "John",
                            LastName = "Doe",
                            MatricNumber = "M001"
                        },
                        new
                        {
                            Id = 2,
                            AdmittedDay = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 4,
                            DateOfBirth = new DateTime(1998, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Biology",
                            FirstName = "Alice",
                            LastName = "Smith",
                            MatricNumber = "M002"
                        },
                        new
                        {
                            Id = 3,
                            AdmittedDay = new DateTime(2018, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 2,
                            DateOfBirth = new DateTime(1997, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Mathematics",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            MatricNumber = "M003"
                        },
                        new
                        {
                            Id = 4,
                            AdmittedDay = new DateTime(2017, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 1,
                            DateOfBirth = new DateTime(1996, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Physics",
                            FirstName = "Sarah",
                            LastName = "Williams",
                            MatricNumber = "M004"
                        },
                        new
                        {
                            Id = 5,
                            AdmittedDay = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 3,
                            DateOfBirth = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Chemistry",
                            FirstName = "Mike",
                            LastName = "Brown",
                            MatricNumber = "M005"
                        },
                        new
                        {
                            Id = 6,
                            AdmittedDay = new DateTime(2015, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 5,
                            DateOfBirth = new DateTime(1994, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "History",
                            FirstName = "Linda",
                            LastName = "Davis",
                            MatricNumber = "M006"
                        },
                        new
                        {
                            Id = 7,
                            AdmittedDay = new DateTime(2018, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 6,
                            DateOfBirth = new DateTime(1997, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Economics",
                            FirstName = "Mark",
                            LastName = "Martinez",
                            MatricNumber = "M007"
                        },
                        new
                        {
                            Id = 8,
                            AdmittedDay = new DateTime(2014, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 7,
                            DateOfBirth = new DateTime(1993, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Psychology",
                            FirstName = "Emily",
                            LastName = "Taylor",
                            MatricNumber = "M008"
                        },
                        new
                        {
                            Id = 9,
                            AdmittedDay = new DateTime(2019, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 8,
                            DateOfBirth = new DateTime(1998, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "English",
                            FirstName = "James",
                            LastName = "Garcia",
                            MatricNumber = "M009"
                        },
                        new
                        {
                            Id = 10,
                            AdmittedDay = new DateTime(2017, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CourseId = 9,
                            DateOfBirth = new DateTime(1996, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Sociology",
                            FirstName = "Olivia",
                            LastName = "Hernandez",
                            MatricNumber = "M010"
                        });
                });

            modelBuilder.Entity("StudentAPI.Data.Student", b =>
                {
                    b.HasOne("StudentAPI.Data.Course", "Courses")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("StudentAPI.Data.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
